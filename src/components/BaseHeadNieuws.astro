---
const { title, thumbnail, content, canonicalURL, publishedDate, modifiedDate, author } = Astro.props;
const defaultCanonical = "https://cinematen.be/";
const finalCanonical = canonicalURL || defaultCanonical;

// Generate a fallback description if content is missing
const defaultDescription = "Lees het laatste nieuws uit de film- en seriewereld op Cinematen.be";
const finalDescription = content || defaultDescription;

// Format dates for meta tags (ISO 8601 format)
const formatDateForMeta = (dateString) => {
    if (!dateString) return null;
    const date = new Date(dateString);
    return isNaN(date.getTime()) ? null : date.toISOString();
};

const formattedPublishedDate = formatDateForMeta(publishedDate);
const formattedModifiedDate = formatDateForMeta(modifiedDate);
---
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KZ3KYRB0T1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KZ3KYRB0T1');
</script>
<meta name="google-site-verification" content="Ue-nOWKl8b37dpA_44eTIqresdKx1GF8BO1BEfSXwg4" />
<meta charset="utf-8" />
<title>{title}</title>
<meta
    content={finalDescription}
    name="description"
/>
<meta content={title} property="og:title" />
<meta
    content={finalDescription}
    property="og:description"
/>
<meta content={thumbnail} property="og:image" />
<meta content={title} property="twitter:title" />
<meta
    content={finalDescription}
    property="twitter:description"
/>
<meta content={thumbnail} property="twitter:image" />
<meta content="article" property="og:type" />
{formattedPublishedDate && <meta content={formattedPublishedDate} property="article:published_time" />}
{formattedModifiedDate && <meta content={formattedModifiedDate} property="article:modified_time" />}
{author && <meta content={author} property="article:author" />}
<meta content="summary_large_image" name="twitter:card" />
<meta content="width=device-width, initial-scale=1" name="viewport" />
<meta content={title} />
<link href="/style.css" rel="stylesheet" type="text/css" />
<link href="https://fonts.googleapis.com" rel="preconnect" />
<link
    crossorigin="anonymous"
    href="https://fonts.gstatic.com"
    rel="preconnect"
/>
<script
    src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"
    type="text/javascript"></script>
<script type="text/javascript">
    WebFont.load({
        google: {
            families: [
                "Rubik:300,regular,500,600,700,800,900,300italic,italic,500italic,600italic,700italic,800italic,900italic",
                "Rubik Mono One:regular",
            ],
        },
    });
</script>
<script type="text/javascript">
    !(function (o, c) {
        var n = c.documentElement,
            t = " w-mod-";
        (n.className += t + "js"),
            ("ontouchstart" in o ||
                (o.DocumentTouch && c instanceof DocumentTouch)) &&
                (n.className += t + "touch");
    })(window, document);
</script>
<script src="/script.js" defer></script>
<link href="/images/favicon.ico" rel="shortcut icon" type="image/x-icon" />
<link href="/images/webclip.png" rel="apple-touch-icon" />

<!-- Canonical URL -->
<link rel="canonical" href={finalCanonical} />

<!-- Structured Data for News Article -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "NewsArticle",
  "headline": title,
  "description": finalDescription,
  "url": finalCanonical,
  ...(formattedPublishedDate && { "datePublished": formattedPublishedDate }),
  ...(formattedModifiedDate && { "dateModified": formattedModifiedDate }),
  ...(author && { "author": { "@type": "Person", "name": author } }),
  ...(thumbnail && { "image": thumbnail }),
  "publisher": {
    "@type": "Organization",
    "name": "Cinematen",
    "logo": {
      "@type": "ImageObject",
      "url": "https://cinematen.be/images/Cinematelogotrans.png"
    }
  }
})}></script>

<style>
    * {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
</style>
