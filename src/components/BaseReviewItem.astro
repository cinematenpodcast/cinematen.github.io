---
const { title, url, thumbnail, date, schrijver, summary, content, rating } = Astro.props || {};

// Function to format the date and adjust for timezone
function formatDate(dateString) {
    const date = new Date(dateString);
    if (isNaN(date.getTime())) return ''; // Return empty string if date is invalid
    const options = { timeZone: 'UTC', hour12: false, hour: 'numeric', minute: 'numeric' }; // Set the timezone to UTC and format the hour and minute without seconds
    const formattedDate = date.toLocaleDateString('nl-NL', { day: '2-digit', month: '2-digit', year: 'numeric' });
    const timePart = date.toLocaleTimeString('nl-NL', options);
    return timePart === '00:00' ? formattedDate : `${formattedDate} ${timePart}`; // Return only date if time is midnight, otherwise combine date and time
}

// Format the date
const formattedDateTime = formatDate(date);


// Function to generate star rating images based on the rating
function generateStarRating(rating) {
    const fullStar = "/images/star-full.png";
    const halfStar = "/images/star-half.png";
    const emptyStar = "/images/star-empty.png";

    const stars = [];
    let remainingRating = rating;

    for (let i = 0; i < 5; i++) {
        if (remainingRating >= 1) {
            stars.push(fullStar);
            remainingRating--;
        } else if (remainingRating > 0) {
            stars.push(halfStar);
            remainingRating = 0;
        } else {
            stars.push(emptyStar);
        }
    }

    return stars;
}

// Ensure rating is a number
const parsedRating = parseFloat(rating);
// Ensure rating is within the range of 0 to 5
const validatedRating = isNaN(parsedRating) ? 0 : Math.min(Math.max(parsedRating, 0), 5);
// Generate star rating images
const starRatingImages = generateStarRating(validatedRating);

---

<a href={url} class="blog-item w-inline-block">
    <div class="tile-image-wrapper">
        {rating && rating > 0 && (
            <div class="rating-wrapper">
                <div class="rating-container">
                    <div class="rating">
                {starRatingImages.map(starImage => (
                  <img src={starImage} loading="lazy" alt="" class="star-image" />
                ))}
                    </div>
                </div>
            </div>
          )}          
        <div class="blog-image-wrap">
            <img src={thumbnail} width="Auto" sizes="(max-width: 479px) 100vw, (max-width: 767px) 87vw, (max-width: 876px) 89vw, (max-width: 991px) 780px, 40vw" alt="" class="blog-image" />
        </div>
    </div>
    <div class="blog-content">
        <h3 class="heading-h2">{title}</h3>
        <p class="paragraph-detials-medium" id="summary">{summary}</p>
        <div class="date-time">
            <div class="writer-tag">
                <img src={`/images/${schrijver}_profilepic.png`} width="45px" height="45px" alt="" class="profile-picture" />
                <div class="normal-wrapper">
                    <div class="title-small">{schrijver}</div>
                    
                        {formattedDateTime && <p class="paragraph-detials-small">{formattedDateTime}</p>}
                    
                </div>
            </div>
            <div class="lees-meer">Lees meer...</div>
        </div>
    </div>
</a>
